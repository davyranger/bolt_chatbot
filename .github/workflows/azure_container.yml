name: Azure container deployment

on:
  push:
    branches:
      - main
    paths:
      - "./bolt_chatbot/container.tf"

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  SLACK_BOT_TOKEN: "${{ secrets.SLACK_BOT_TOKEN }}"
  SLACK_APP_TOKEN: "${{ secrets.SLACK_APP_TOKEN }}"

jobs: 
  terraform-apply:
      runs-on: ubuntu-latest
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'

      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform install
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Terraform Plan
        run: terraform plan -out "tfplan"

      - name: Convert Terraform Plan to JSON
        run: terraform show -json tfplan | grep '^{.*}$' > tfplan.json

      - name: Setup OPA
        uses: open-policy-agent/setup-opa@v2
        with:
          version: latest

      - name: Run OPA Authz Policy Check
        id: opa-authz-check
        run: |
          result=$(opa eval --data .github/workflows/terraform.rego --input tfplan.json "data.terraform.analysis.authz" --format=json | jq '.result[0].expressions[0].value')
          echo "result=$result" >> $GITHUB_ENV
          echo $result
        continue-on-error: false
      
      - name: Run OPA Score Policy Check
        id: opa-score-check
        run: |
          opa eval --data .github/workflows/terraform.rego --input tfplan.json "data.terraform.analysis.score"
        continue-on-error: false

      - name: Terraform Apply
        if: env.result == 'true'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
        run: terraform apply -auto-approve