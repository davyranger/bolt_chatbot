name: Deploy Slack Bot to Azure

on:
  push:
    branches:
      - main

  pull_request:
    branches: 
      - main

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  AZURE_CLIENT_SECRET : "${{secrets.AZURE_CLIENT_SECRET }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

  SLACK_BOT_TOKEN: "${{ secrets.SLACK_BOT_TOKEN }}"
  SLACK_APP_TOKEN: "${{ secrets.SLACK_APP_TOKEN }}"

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init -reconfigure

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      run: terraform apply -auto-approve

    # pushing docker image
    - name: Log in to Azure
      run: |
        az login --service-principal -u "${{ secrets.AZURE_CLIENT_ID }}" -p "${{ secrets.AZURE_CLIENT_SECRET }}" --tenant "${{ secrets.AZURE_TENANT_ID }}"
        az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"

    - name: Log in to ACR
      run: |
        az acr login --name boltslackbotcontainerregistry

    - name: Build Docker image
      run: |
        docker build \
          --build-arg SLACK_BOT_TOKEN=${{ secrets.SLACK_BOT_TOKEN }} \
          --build-arg SLACK_APP_TOKEN=${{ secrets.SLACK_APP_TOKEN }} \
          -t boltslackbotcontainerregistry.azurecr.io/slack-bot:latest .

    - name: Push Docker image to ACR
      run: |
        docker push boltslackbotcontainerregistry.azurecr.io/slack-bot:latest