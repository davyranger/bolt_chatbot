name: Container-Plan-Workflow

on:
  workflow_run:
    workflows: ["Main-Plan-Workflow"]
    types: [completed]

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

jobs:
  terraform-container-plan-check:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          /*
          !/main.tf
        sparse-checkout-cone-mode: false

    - name: Terraform install
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init -reconfigure

    - name: Terraform Plan
      run: |
        terraform plan \
          -var="slack_bot_token=${{ secrets.SLACK_BOT_TOKEN }}" \
          -var="slack_app_token=${{ secrets.SLACK_APP_TOKEN }}" \
          -out "tfplan"
      timeout-minutes: 5

    - name: Convert Terraform Plan to JSON
      run: terraform show -json tfplan | grep '^{.*}$' > tfplan.json

    - name: Setup OPA
      uses: open-policy-agent/setup-opa@v2
      with:
        version: latest

    - name: Run OPA Authz Policy Check
      id: opa-authz-check
      run: |
        result=$(opa eval --data .github/workflows/terraform.rego --input tfplan.json "data.terraform.analysis.authz" --format=json | jq '.result[0].expressions[0].value')
        echo $result
      continue-on-error: false
    
    - name: Run OPA Score Policy Check
      id: opa-score-check
      run: opa eval --data .github/workflows/terraform.rego --input tfplan.json "data.terraform.analysis.score"
      continue-on-error: false


      
